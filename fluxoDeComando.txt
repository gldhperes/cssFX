1. SERVER
    1. routes/posts.js
    2. controllers/posts.js

2. CLIENT
    1. src/api/index.js
    2. src/actions/posts.js
    3. src/reducers/posts.js
    4. src/components/post.js



FLUXO / WORK-FLOW

CLIENTE
1. Começa pelos Inputs do Formulario ( src/components/Auth/auth.js ), usando o dispatch ( UseDispatch ), 
    que despacha uma ação(ões) / (função) que passa(m) parametro(s)

2. As ações / Funções do dispatch estao em ( src/actions/auth.js ) que recebe(m) os mesmos parametros passados 
    e chamam uma função " Async ( dispatch ) => {} " que faz uma chamada await na API ( src/api/index.js )

3. Essa chamada na API ( src/api/index.js ) usa o AXIOS e faz um GET,POST,PUT,DELETE REQUEST para o banco de dados (SERVER)
    passando um PARAMETRO e esperando um DADO ( chamada await )

SERVIDOR

4. A chamada API vinda do CLIENT vai para ( ./index.js ) do SERVER que é verificado as rotas

5. Contendo-as, é passado para respecticas Funções em ( .routes/ JS )

6. La estarão as rotas especificadas, e repassadas para os respectivos MIDDLEWARES
    EX: router.patch('/:id/likePost', auth, likePost)
        chamado a rota '/:id/likePost' , a função auth será executada em primeira instancia 
        logo depois a função likePost será executada
     

7. Após tudo ocorrer bem a função ira retornar a chamada da API vinda do cliente: 
    EX: res.status(200).json(postMessage)


CLIENTE

8. Em ( src/actions/ JS ) a variavel { DATA } ira ser atribuida ao retorno 
    da chamada do API vinda do servidor

9. A função: dispatch( { type: ACTION.TYPE, payload: DATA } ) ira despachar
    o tipo de ação e o valor de { DATA } para o MIDDLEWARE do redux

10. O MIDDLESWARE vera o tipo de ação que será tomada e ira retornar os dados do payload
    para a aplicação e atualiza-o












4. Obtendo o dado da chamada AWAIT, o DADO e o TIPO da ação são 
    despachadas automaticamente para um MIDDLEWARE ( src/reducers/index.js)
    EX: ( dispatch({ type: 'ACAO', data }) )

5. Esse MIDDLESWARE combina os Scrypts da pasta 
     EX: 
        import { combineReducers } from 'redux'

        import posts from './posts'
        import auth from './auth'

        export default combineReducers( { posts, auth } )